<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leon.mybatisspring.dao.UserDao">

    <resultMap id="userMap" type="user">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="mobile" column="mobile"/>
        <result property="email" column="email"/>
        <result property="note" column="note"/>
        <collection property="roleList" column="id" fetchType="lazy"
                    select="com.leon.mybatisspring.dao.RoleDao.findRoleByUserId"/>
    </resultMap>

    <select id="getUser" parameterType="int" resultMap="userMap">
        SELECT id, user_name as userName, birthday, sex, mobile, email, note
        FROM t_user
        WHERE id = #{id}
    </select>

    <select id="findUsers" parameterType="string" resultType="user">
        SELECT id, user_name as userName, birthday, sex, mobile, email, note
        FROM t_user
        <where>
            <if test="userName != null">
                user_name LIKE concat('%', #{userName}, '%')
            </if>
        </where>
    </select>

    <select id="findUserByRoleId" parameterType="int" resultMap="userMap">
        SELECT a.id, a.user_name, a.sex, a.birthday, a.mobile, a.email, a.note
        FROM t_user a, t_user_role b
        WHERE a.id = b.user_id and b.role_id = #{roleId}
    </select>

    <update id="updateUser" parameterType="user">
        UPDATE t_user
        <set>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="email != null">email = #{email},</if>
            <if test="note != null">note = #{note}</if>
        </set>
        WHERE id = #{id}
    </update>

    <insert id="insertUser" parameterType="user">
        INSERT INTO t_user(user_name, birthday, sex, mobile, email, note)
        VALUES (#{userName}, #{birthday}, #{sex}, #{mobile}, #{email}, #{note})
    </insert>

    <delete id="deleteUser" parameterType="int">
        DELETE FROM t_user
        WHERE id = #{id}
    </delete>
</mapper>